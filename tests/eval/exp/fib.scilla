(* Expected output: (IntLit 21) *)

let zero = Zero in 
let one  = Succ zero in
let two  = Succ one in
let three = Succ two in
let four = Succ three in
let five = Succ four in
let six = Succ five in
let seven = Succ six in

let fib = fun (n : Nat) =>
  let iter_fun =
    fun (res : Product Int Int) => fun (n: Nat) =>
      match res with
      | Pair x y => let z = builtin add x y in
      Pair {Int Int} z x
      end
    in
  let zero = 0 in
  let one = 1 in
  let init_val = Pair {Int Int} one zero in
  let res = nat_fold iter_fun init_val n in
	match res with
	|	Pair x y => x
	end

in

fib seven

		
