(* HelloWorld contract *)


(***************************************************)
(*               Associated library                *)
(***************************************************)
library HelloWorld

let one_msg = 
  fun (msg : Message) => 
  let nil_msg = Nil {Message} in
  Cons {Message} msg nil_msg

let not_owner_code = Int32 1

(***************************************************)
(*             The contract definition             *)
(***************************************************)

contract HelloWorld
(owner: Address)

field msgstr : String = "Hello World"

transition sayHello()
	is_owner = builtin eq owner _sender;
  match is_owner with
  | False =>
    msg = {_tag : Main; _recipient : _sender; _amount : Uint128 0; code : not_owner_code};
    msgs = one_msg msg;
    send msgs
  | True =>
    greeting <- msgstr;
    msg = {_tag : Main; _recipient : _sender; _amount : Uint128 0; welcome_msg : greeting};
    msgs = one_msg msg;
    send msgs
  end
end
 


